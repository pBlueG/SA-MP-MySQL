


[/
    Copyright (c) 2022 Vinnie Falco (vinnie.falco@gmail.com)

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

    Official repository: https://github.com/boostorg/url
]

[/------------------------------------------------------------]

These member functions are available for interacting
with the scheme component of URL containers:

[table Scheme Members [
    [Name]
    [Description]
][
    [[link url.ref.boost__urls__url_view_base.has_scheme `has_scheme`]]
    [
    Return `true` if a scheme is present.
    ]
][
    [[link url.ref.boost__urls__url_view_base.scheme `scheme`]]
    [
    Return the scheme as a string.
    ]
][
    [[link url.ref.boost__urls__url_view_base.scheme_id `scheme_id`]]
    [
    Return the scheme as a
    [link url.ref.boost__urls__scheme known scheme]
    constant,
    [link url.ref.boost__urls__scheme `scheme::unknown`]
    if the scheme is not well-known, or
    [link url.ref.boost__urls__scheme `scheme::none`]
    if no scheme is present.
    ]
][
    [[link url.ref.boost__urls__url_base.remove_scheme `remove_scheme`]]
    [
    Remove the scheme if present.
    ]
][
    [[link url.ref.boost__urls__url_base.set_scheme `set_scheme`]]
    [
    Set the scheme to a given string or 
    [link url.ref.boost__urls__scheme known scheme]
    constant.
    ]
]]

[/------------------------------------------------------------]

[table Userinfo Members [
    [Name]
    [Description]
][
    [[link url.ref.boost__urls__url_view_base.has_userinfo `has_userinfo`]]
    [
    Return `true` if a userinfo is present.
    ]
][
    [[link url.ref.boost__urls__url_view_base.encoded_userinfo `encoded_userinfo`]]
    [
    Return the userinfo field as a percent-encoded string.
    ]
][
    [[link url.ref.boost__urls__url_view_base.userinfo `userinfo`]]
    [
    Return the userinfo field with percent-decoding applied.
    ]
][
    [[link url.ref.boost__urls__url_view_base.encoded_user `encoded_user`]]
    [
    Return the user field as a percent-encoded string.
    ]
][
    [[link url.ref.boost__urls__url_view_base.user `user`]]
    [
    Return the user field with percent-decoding applied.
    ]
][
    [[link url.ref.boost__urls__url_view_base.has_password `has_password`]]
    [
    Return `true` if a password is present.
    ]
][
    [[link url.ref.boost__urls__url_view_base.encoded_password `encoded_password`]]
    [
    Return the password as a percent-encoded string.
    ]
][
    [[link url.ref.boost__urls__url_view_base.password `password`]]
    [
    Return the password with percent-decoding applied.
    ]
][
    [[link url.ref.boost__urls__url_base.set_user `set_user`]]
    [
    Set the user field using a plain string.
    ]
][
    [[link url.ref.boost__urls__url_base.remove_password `remove_password`]]
    [
    Remove the password field if present.
    ]
][
    [[link url.ref.boost__urls__url_base.set_encoded_password `set_encoded_password`]]
    [
    Set the password field using a percent-encoded string.
    ]
][
    [[link url.ref.boost__urls__url_base.set_password `set_password`]]
    [
    Set the password field using a plain string.
    ]
][
    [[link url.ref.boost__urls__url_base.remove_userinfo `remove_userinfo`]]
    [
    Remove the entire userinfo if present.
    ]
][
    [[link url.ref.boost__urls__url_base.set_encoded_userinfo `set_encoded_userinfo`]]
    [
    Set the entire userinfo using a percent-encoded string.
    ]
][
    [[link url.ref.boost__urls__url_base.set_userinfo `set_userinfo`]]
    [
    Set the entire userinfo using a plain string.
    ]
]]



